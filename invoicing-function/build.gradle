plugins {
    id 'java'
}

def cloudFunctionClassName = 'de.unibamberg.dsam.group6.invoicingfunction.Invoice'

group = 'de.unibamberg.dsam.group6.invoicingfunction'
version = '0.1'
sourceCompatibility = '17'

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    invoker
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'com.google.cloud:google-cloud-storage:2.16.0'
    compileOnly 'com.google.cloud.functions:functions-framework-api:1.0.4'
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.2.0'
    testImplementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
}

tasks.register("runFunction", JavaExec) {
    main 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
        '--target', project.findProperty('run.functionTarget') ?: cloudFunctionClassName,
        '--port', project.findProperty('run.port') ?: 8081
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}